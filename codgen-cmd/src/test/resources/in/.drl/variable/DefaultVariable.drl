package variable;

import java.util.Map;
import java.util.HashMap;
import rebue.wheel.core.JdbcUtils;
import rebue.wheel.serialization.jackson.JacksonUtils;
import com.github.codgen.core.drools.fact.VariableFact;

/**
 * 默认变量
 */
rule variable_default
    agenda-group "variable"
    no-loop true            // 防止死循环(当规则通过update之类的函数修改了Fact对象时，可能使当前规则再次被激活从而导致死循环)
    lock-on-active true     // 限制当前规则只会被执行一次(包括当前规则的重复执行不是本身触发的)
    salience -1             // 执行的优先级(值越大优先级越高，可以为负数，不设置默认为0)
when
    $variableFact: VariableFact()
then
    Map variableMap = $variableFact.getVariableMap();
    for (Map.Entry<String, ?> variableOptions : $variableFact.getVariableOptions().entrySet()) {
        if($variableFact.getIgnoreVariableOptions().contains(variableOptions.getKey())) continue;
        variableMap.put(variableOptions.getKey(), variableOptions.getValue());
    }
    update($variableFact);
end