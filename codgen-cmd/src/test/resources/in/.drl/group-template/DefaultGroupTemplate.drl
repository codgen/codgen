package grouptemplate;

import java.util.Map;
import org.beetl.core.GroupTemplate;
import org.beetl.core.Template;
import io.github.codgen.core.drools.fact.GroupTemplateFact;

/**
 * 获取默认的groupTemplate
 */
rule group_template_default
    agenda-group "group-template"   // 议程分组
    no-loop true                    // 防止死循环(当规则通过update之类的函数修改了Fact对象时，可能使当前规则再次被激活从而导致死循环)
    lock-on-active true             // 限制当前规则只会被执行一次(包括当前规则的重复执行不是本身触发的)
    salience -1                     // 执行的优先级(值越大优先级越高，可以为负数，不设置默认为0)
when
    $groupTemplateFact: GroupTemplateFact()
then
    // 在groupTemplate选项中配置的key
    String DEFAULT_GROUP_TEMPLATE_KEY = "default";
    // groupTemplate列表
    Map<String,GroupTemplate> groupTemplates = $groupTemplateFact.getGroupTemplates();
    // 获取groupTemplate
    GroupTemplate groupTemplate = (GroupTemplate) groupTemplates.get(DEFAULT_GROUP_TEMPLATE_KEY);
    // 设置groupTemplate返回
    $groupTemplateFact.setPathGroupTemplate(groupTemplate);
    $groupTemplateFact.setContentGroupTemplate(groupTemplate);
    update($groupTemplateFact);
end