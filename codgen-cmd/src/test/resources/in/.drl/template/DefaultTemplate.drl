package template;

import java.util.Map;
import java.util.HashMap;
import java.util.List;
import org.beetl.core.GroupTemplate;
import org.beetl.core.Template;
import com.github.codgen.core.drools.fact.TemplateFact;

/**
 * 默认模板
 */
rule template_default
    agenda-group "template" // 议程分组
    no-loop true            // 防止死循环(当规则通过update之类的函数修改了Fact对象时，可能使当前规则再次被激活从而导致死循环)
    lock-on-active true     // 限制当前规则只会被执行一次(包括当前规则的重复执行不是本身触发的)
    salience -1             // 执行的优先级(值越大优先级越高，可以为负数，不设置默认为0)
when
    $templateFact: TemplateFact()
then
    @SuppressWarnings("unchecked")
    GroupTemplate defaultGroupTemplate = (GroupTemplate) $templateFact.getGroupTemplates().get("default");
    $templateFact.setPathTemplate(defaultGroupTemplate.getTemplate($templateFact.getTemplateFileInfo().getPath()));
    $templateFact.setContentTemplate(defaultGroupTemplate.getTemplate($templateFact.getTemplateFileInfo().getContent()));
    update($templateFact);
end